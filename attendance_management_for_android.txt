
DTN利用の勤怠管理アプリfor android

android端末を持った作業者の移動記録を取り、定期的にサーバに情報配信を行う
まず、android端末（複数存在）は、周囲の無線LANビーコン、GPS,デッドレコニングにより、データサンプリングを行いつつ、
通信可能な周囲の端末に蓄積したデータの転送を行う。通信できなければ蓄積のみを行う。
サーバは、端末からのデータ受信機能・移動記録を算出・データベース化し、端末（所持者の）日毎の勤怠情報を視覚化する機能を持つ
（移動記録とは、いつ、どこで、どの位滞在していたかという情報となる。さらにGPS、
デッドレコニング、無線LANアクセスポイント等による移動の軌跡情報も取り、地図上に表示する）

+ [android端末（以下、端末）のデータ取得・配信方式]

++前提条件
無線LANスイッチのON（wifi-tetherによるアドホックモード起動）とデッドレコニングアプリ、GPSスイッチを常時ONとする
オフィス等、屋内の無線LANアクセスポイント(AP)のMACアドレスと場所を組みにしたデータベースを予め用意する
端末の無線LAN受信機からは、アクセスポイントのビーコンを受信可能としておく。
端末の移動履歴・軌跡を以下の方法により取得する。
携帯回線（point to point:pppのインタエース）を使用せず、無線LAN（eth0 または wlan0のインタフェース）のみの使用を前提とする。
IPアドレスは全端末で異なるものを固定設定しておく（実際の運用では、システム開始時に情報配信に用いるネットワーク単位にDHCPによるIPアドレス設定方法、固定設定後に
Duplicate Address Detection(DAD)の利用による重複アドレス検知を行い、端末毎に異なるアドレスが割り当てられる方式が
ありうる。）

++データ取得方式
○周囲の無線LANアクセスポイントから受信したビーコンに含まれるMACアドレス情報を取得
端末内にAP情報ログ
（データタイプ＝無線LANビーコンビーコン受信が不可能となった時刻＝サンプル時刻、自端末IPアドレス、ビーコン受信開始時刻、APのMACアドレス）
を端末内に蓄積する。ログの作成手順を説明する。MACアドレス１つに対して、１つの状態遷移図を作成する。複数からのビーコン受信の場合、MACアドレス毎に状態遷移を区別する
①ビーコン中のMACに対する受信状態が現在、「受信中状態」ではない→「受信中状態」に遷移。その時刻を保持
（ビーコン受信状態は、１つのMACに対して１つの項目を作成し、項目をリストにして管理する。項目作成タイミングは、ビーコンの初受信の時とする。
さらに、ビーコンタイムアウトカウント用のスレッドを作成する。✕ここでビーコン受信はしない）
②そのビーコンが定期的に受信されているかどうかを、①で作成したスレッドを使って監視する。具体的には、ビーコン受診時にMACに対応するビーコンタイムアウトカウント用のスレッドがあれば、対応するスレッドにおいて、タイマーを初期化する。もしもビーコンタイムアウトに達した場合、リスト項目削除スレッドにシグナルを送り、リストから項目を削除する。このスレッドでは、（ビーコン受信開始時刻、APのMACアドレス、ビーコン受信が不可能となった時刻＝スレッドの現在時刻）をCSVファイル形式にファイルに「追加出力」する　✕上書きしない。
（※補足：APに対応するMACアドレスに対応する絶対位置データベースを保持するのは、サーバ側のみで端末にはデータベースが存在しない。よって、ここで絶対位置測位を行うことはできない）

○GPSによる位置測位（屋外など、測位可能である場所でのみ取得）
GPSによって取得した緯度経度情報を定期的にサンプリングし、（データタイプ＝GPSデータ、サンプル時刻、自端末IPアドレス、緯度、経度）をログに追加出力する

○デッドレコニングによる相対位置測位（絶対位置を無線LANAPのビーコンorGPSにより行い、移動時の相対位置を取るために利用する）
レコニング結果の相対位置情報を定期的にサンプリングして、（データタイプ＝デッドレコニング、サンプル時刻、自端末IPアドレス、x位置,y位置）をログに追加出力する

３つの情報はタイプ別に書き込むログを区別せず、時系列的に並べるのみとする。

○データの削除処理（オプション）
取得したログのうち、送信タイムアウトしたデータをログから順次削除していく
（※補足：　この機能は、古いデータが蓄積し続けて大きすぎるログとなり、データ送信を困難にさせるのを防止する）
（データを間引き削除する方式も考えられる）

++データ配信方式
○端末ビーコンブロードキャスト
自身のIPアドレスを含んだUDPパケットをブロードキャストする。

○ビーコン受信
他端末からのUDPパケット受信時、（IPアドレス情報、受信電力強度）を抽出する。受信電力強度が、「しきい値：予め設定」以上であれば、データ取得によって蓄積したデータの配信を行う
（※補足　「受信電力しきい値」を設ける理由：高い受信電力であれば、隣接端末との1リンク通信成功確率が高いが
低い場合、通信端末同士が遠ざかるなどの理由で再送が繰り返され、結局通信失敗する結果になると考えられる。このしきい値の設定値は
実験的に検討する必要がある。）

○蓄積データの転送
蓄積データのある状態で、かつ受信電力強度が一定しきい値以上であれば、蓄積データの転送を宛先IPアドレスに対して行う。（TCP利用）
転送が完了したら、転送完了した項目を削除、蓄積バイトサイズを転送が完了した分だけ減少させる。
+++データ転送フォーマット、データ転送時のループ防止するための仕組み
単純に、①ビーコン受信　②ビーコンIPへデータ送信　という転送方式にすると、①、②の手順により通信を行った２つの端末が互いに通信可能な状態である間、常に①、②が繰り返され、データ転送のループが発生する場合がある（トランスポートにUDPを使用した場合は十分起こりうる。ただし、TCPを使った場合、データ転送の成功or失敗は送信元で把握できる場合が多いので、あまり起こらないと考えられる（それでも、送信元がACK(TCPの）受信に失敗した場合は受信側ではデータ受信できている状態だが、送信元は転送失敗と判断し、再送するのでやはりループの可能性はある）。そこでループ防止を考慮した転送データフォーマット（送信単位：１セグメント）を以下に示す。

（シーケンス番号、（任意長データ部＝IP(v4)のMTU未満のサイズ））
シーケンス番号は１セグメントの送信毎に更新する。（0,1,2,3,...)

シーケンス番号の利用によりループを回避することができる。具体的には、先の手順で、①ビーコン受信　②ビーコンIPにデータ送信　③受信側では受信時に、送信元IPアドレスとシーケンス番号を組みとして履歴を取る。もしも送信元IPアドレスとペアになっているシーケンス番号が前回受信時の番号よりも小さい場合or同じ場合、当該データは廃棄する

++データアグリゲーション：
蓄積データはログファイルとして保存されているが、

○他端末からの受信データの中継
他端末から蓄積データを受信（TCP）すると、一度ストレージに保存する（✕メモリ(リスト状にするなど)に格納すると不足が起きる：例えば、motorola photon isw11mの主記憶は最大1GBだが、OSや他のプロセスにより半分は使用された状態となるので、本プロセスで利用可能なメモリ量は最大でも主記憶の1/3程度であると考えるべき）
ストレージに保存されるとき、自身のログデータとマージを行い、時系列順にソートする。


+ [サーバ機のデータ取得・端末の移動履歴の視覚化の方法]
++ 前提条件

android端末の無線LANはアドホックモードで動作しているため、サーバ側もアドホックモードで動作する必要がある
無線LANアクセスポイントのMACアドレス情報と、アクセスポイントの位置のデータベースがある
データベースソフトウェアが起動中である（PorstreSGL, MySQL)



